{
  "hash": "f61f80ecffb06d70247bb972560771ce",
  "result": {
    "markdown": "---\ntitle: \"Creando mi primer blog con Quarto\"\ndescription: \"Te ense√±o a crear tu primer blog con Quarto, publicar nuevos art√≠culos, subirlo a GitHub y desplegarlo en la web.\"\nauthor: \"Paulo Villarroel\"\ndate: \"2022-09-17\"\ncategories: [quarto, tutorial]\n---\n\n\n# Hola!!\n\nEste es el primer post de mi nuevo blog. Ac√° ir√© escribiendo sobre distintas tem√°ticas relacionadas al mundo de la programaci√≥n y la ciencia de datos.\n\nBienvenido/a nuevamente.\n\nEn esta oportunidad te voy a ense√±ar a crear tu propio blog, como el que est√°s viendo ahora. Si! Como este mismo. Te parece?\n\nPues vamos a ello!!\n\nLo primero que debes saber es que este blog est√° constru√≠do sobre la base [Quarto](https://quarto.org/). Quarto es una nueva plataforma open-source, lanzada hace poco tiempo, y que busca facilitar la publicaci√≥n de art√≠culos cient√≠ficos. La gracia que tiene es que soporta distintos lenguajes de programaci√≥n (R, Python, Julia) en una sola aplicaci√≥n.\n\nBueno, dentro de las cosas que permite hacer Quarto es crear un blog. Que es lo que haremos ahora.\n\n## Paso 1: Descargar Quarto\n\nLo primero que tienes que hacer es [descargar Quarto](https://quarto.org/docs/get-started/) desde su web oficial. Elige la versi√≥n que corresponda a tu sistema operativo. La instalaci√≥n no tiene ninguna cosa extra√±a, es como cualquier programa nada m√°s.\n\n![](download-quarto.png){fig-align=\"center\"}\n\nEn lo personal, estoy usando RStudio como editor de texto, pero se pueden usar otros como Visual Studio Code o Jupyter Notebooks. En este caso, explicar√© los pasos para RStudio.\n\n## Paso 2: Crea un proyecto\n\nSi est√°s familiarizado con RStudio, sabr√°s lo que es un proyecto. Si no, pues un proyecto es un conjunto de archivos que se mantienen relacionados entre s√≠, de modo que sea m√°s simple el desarrollo y vinculaci√≥n. Adem√°s, de facilitar el uso de rutas relativas lo cual es genial a la hora de compartir c√≥digo o de proyectos m√°s grandes.\n\nEn RStudio debes ir al men√∫ superior y seleccionar `New Project‚Ä¶`\n\n![](new-project1.png){fig-align=\"center\"}\n\nEso te abrir√° una nueva pesta√±a, en donde debes seleccionar la opci√≥n `New Directory.`\n\n![](new-project2.png){fig-align=\"center\"}\n\nLuego, debes eligir el tipo de proyecto. En este caso, selecciona `Quarto Blog`.\n\n![](new-project3.png){fig-align=\"center\"}\n\nSe abrir√° una nueva ventana. Ac√° debes poner el nombre de la carpera que vas a crear (en Directory name). Verifica la carpeta en donde vas a crear este directorio. Luego dale a `Create Project`.\n\n![](new-project4.png){fig-align=\"center\"}\n\nCon eso, Quarto te crear√° una serie de archivos y la estructura del blog de forma autom√°tica!!!\n\nVer√°s que ahora tienes muchos archivos nuevos en tu visor.\n\n![](files.png){fig-align=\"center\"}\n\n## Paso 3: Preview de tu blog\n\nCon los pasos anteriores, Quarto te cre√≥ un blog completamente funcional. Eso si, con art√≠culos de muestra que despu√©s hay que eliminar o modificar, obviamente. Pero ya tienes la base.\n\nPara revisar c√≥mo se ve tu blog, debes darle clic al bot√≥n `Render` de la parte superior.\n\n![](render.png){fig-align=\"center\"}\n\nVer√°s una serie de cosas que van a sair en la consola de RStudio, pero es parte del proceso de renderizado. O sea, para armar el blog y pasar los archivos a una p√°gina web.\n\nSi todo sale bien, se deber√≠a abrir tu blog en una pesta√±a de tu navegador.\n\nY listo!!!\n\nYa tienes tu primer blog üéâ\n\nEs posible que tu blog se muestra en el mismo RStudio en una ventana lateral. Esa opci√≥n me parece que viene por defecto (no recuerdo bien), pero yo la tengo configurada para que me aparezca el preview en una ventana del navegador. Me gusta m√°s esa opci√≥n, pues se ve mejor el contenido. Para poner esa opci√≥n, debes darle clic a la tuerca que est√° al lado derecho del bot√≥n Render y seleccionar `Preview in Window`.\n\n![](preview.png)\n\nF√≠jate que la web est√° en tu computador y se est√° mosrando desde una direcci√≥n que dice `localhost`. Esto es por ese mismo motivo. A pesar de que se ve como una web a trav√©s de tu navegador, el blog solo est√° en tu computador. No est√° subido a internet ni alojado en ning√∫n servicio que permita que otros lo vean. Para eso, hay que hacer algunas cosas, que las veremos un poco m√°s adelante.\n\n## Paso 4: Crear un post\n\nCuando creas tu proyecto de blog con Quarto, la aplicaci√≥n crea la estructura y pone 2 post de ejemplo.\n\nSi observas los archivos, ver√°s una carpeta llamada `posts`. En esta carpeta es donde se deben ir guardando los archivos para los nuevos posts.\n\nPor defecto te crea 2 carpetas: welcome y post-with-code\n\nEsos son post de muestra, que los puedes eliminar. Pero antes que lo hagas, quiero que te fijes en c√≥mo estan estructurados. Esa ser√° la forma en que deber√°s crear tu pr√≥ximas entradas.\n\nCada art√≠culo (o post) consiste en una carpeta. Dentro de ella hay un archivo `index.qmd` y algunas im√°genes.\n\nEsta es la estructura de archivos que se te crear√° de forma autom√°tica:\n\n-   Created \\_quarto.yml\n\n-   Created index.qmd}\n\n-   Created posts/welcome/index.qmd\n\n-   Created posts/post-with-code/index.qmd\n\n-   Created about.qmd\n\n-   Created styles.css\n\n-   Created posts/\\_metadata.yml\n\nEn la carpeta `posts` crea un nuevo archivo con el nombre de tu nueva entrada. Dentro de esa carpeta, crea un archivo `.qmd` y ll√°malo `index`. Es decir, te deber√≠a quedar un archivo de nombre i`ndex.qmd`\n\nEsto es fundamental. Siempre usa index para nombrar a los nuevos posts. De lo contrario, Quarto no encontrar√° el archivo al cual hacer referencia para renderizar adecuadamente la web.\n\nSi ya est√°s familiarizado/a con R Markdown, notar√°s que trabajar con Quarto es muy similar. De hecho, los archivos .qmd tienen la misma estructura. Un encabezado (YAML) con algunas cinfiguraciones generales y luego el espacio para escribir texto.\n\nPara este post, us√© este YAML:\n\n![](yaml.png){fig-align=\"center\"}\n\nEn art√≠culos posteriores veremos c√≥mo configurar el YAML, pues tiene muchas opciones.\n\nAhora que ya tienes creada una nueva carpeta dentro de `posts` y agregaste el `index.qmd`, b√°sicamente ya tienes un nuevo art√≠culo listo para el blog.\n\nGuarda todos los cambios y dale a `Render` nuevamente. Si ya ten√≠as abierto el blog en tu navegador, deber√≠an verse reflejados los cambios realizados. Si no pasa eso, actualiza la p√°gina para ver los cambios.\n\nAs√≠ se ve mi blog, solo con 1 art√≠culo publicado (que es este).\n\n![](blog.png){fig-align=\"center\"}\n\n## Paso 5: Subiendo el blog a GitHub\n\nMe encanta el open-source y el compartir c√≥digo. Y una de las mejores formas de dejarlo publicado en GitHub.\n\nPara hacerlo, desde RStudio es bastante simple. Ah! Debes tener una cuenta ya creada en GitHub y tener GIT instalado.\n\nTeniendo lo anterior ya realizado, podemos usar la librer√≠a `{usethis}` para simpleificar el proceso. [Ac√° puedes ver](https://usethis.r-lib.org/) la documentaci√≥n oficial.\n\nPrimero, instalamos la librer√≠a:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"usethis\")\n```\n:::\n\n\nConfiguramos nuestras credenciales (los datos que usamos para la cuenta de GitHub):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# usethis::use_git_config(\n#   # your name\n#   user.name = \"Mi nombre\",\n#   # your email used in your GitHub account\n#   user.email = \"micorreo@gmail.com\"\n# )\n```\n:::\n\n\nCreamos nuestro GitHub PAT Token con [`usethis::create_github_token()`](https://usethis.r-lib.org/reference/github-token.html) (es como una contrase√±a, pero m√°s segura). Cuando ejecutas este comando, se te abrir√° una pesta√±a de tu navegador. Tendr√°s que verificar algunos permisos a GitHub. Luego, en la configuraci√≥n del token, cambia el nombre, ajustael tiempo de expiraci√≥n y el resto d√©jalo como est√°. Crea el token.\n\nSe te mostrar√° una nueva p√°gina con tu claves.\n\nPara guardar tu nuevo token, usa [`gitcreds::gitcreds_set()`](https://usethis.r-lib.org/reference/github-token.html). En la consola se te mostrar√° un men√∫. Selecciona la opci√≥n 2 Replace these credentials. Luego copia el token de GitHub, actualiza y guarda tus credenciales.\n\nReinicia la sesi√≥n de RStudio para que se hagan efectivos los cambios. Usualmente puedes usar `CTRL + SHIFT + F10` o del men√∫ de arriba selecciona la pesta√±a de Session y luego Restart R.\n\nUsa [`usethis::git_sitrep()`](https://usethis.r-lib.org/reference/git_sitrep.html) para verificar si tus credenciales como nombre, email y PAT est√°n correctamente configuradas.\n\nF√≠jate que salga este texto `Personal access token for 'https://github.com': '<discovered>'`\n\nCon eso ya deber√≠amos estar listos con la configuraci√≥n de GIT y GitHub.\n\nAhora configuremos algunas cosas m√°s...\n\nUsaremos `use_git()` para iniciar el control de versiones de GIT en nuestro proyecto.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# usethis::use_git()\n# ‚úî Setting active project to '/Users/Desktop/name-of-your-blog/'\n# ‚úî Initialising Git repo\n# ‚úî Adding '.Rproj.user', '.Rhistory', '.Rdata', '.httr-oauth', '.DS_Store' to '.gitignore'\n# There are 8 uncommitted files:\n# * '_quarto.yml'\n# * '.gitignore'\n# * 'about.qmd'\n# * 'example-quarto-blog.Rproj'\n# * 'index.qmd'\n# * 'posts/'\n# * 'profile.jpg'\n# * 'styles.css'\n\n\n# Is it ok to commit them?\n# \n# 1: Not now\n# 2: Yup\n# 3: Negative\n# \n# Selection: 2\n\n\n# ‚úî Adding files\n# ‚úî Making a commit with message 'Initial commit'\n# ‚Ä¢ A restart of RStudio is required to activate the Git pane\n# Restart now?\n# \n# 1: No way\n# 2: Definitely\n# 3: No\n# \n# Selection: 2\n```\n:::\n\n\nAhora, usaremos use_github() para crear un repositorio en GitHub y subir el proyecto.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# usethis::use_github()\n```\n:::\n\n\nSi todo ha salido bien, se deber√≠a abrir tu navegador con el nuevo repositorio de GitHub.\n\n[Ac√° puedes](https://github.com/paulovillarroel/mi_blog) ver el repositorio de este proyecto.\n\n## Paso 6: Desplegar con Netlify\n\nAhora vamos a publicar nuestro blog en internet para que otros lo puedan ver. Recuerda que hasta ahora, sigue estando solo en tu computador.\n\nPara hacer el deploy (despliegue) usaremos [Netlify](https://www.netlify.com/).\n\nEste es un servicio que har√° que el blog est√© disponible en una direcci√≥n web. Adem√°s, entre otras funciones super interesantes, tiene la opci√≥n de conectarlo a un repositorio de GitHub, que es lo que haremos en este caso.\n\nUsaremos esta opci√≥n, ya que nos ayudar√° a ser m√°s transparentes en todo el flujo de trabajo y podremos desplegar los cambios que vayamos realizando en nuestro proyecto y repo de GitHub.\n\nPara eso, primero deber crearte una cuenta en Netlify. Mi recomendaci√≥n es que lo hagas usando tu cuenta de GitHub.\n\nUna vez iniciada sesi√≥n, se te mostrar√° algo as√≠:\n\n![](netlify1.png){fig-align=\"center\"}\n\nEn la secci√≥n Sites, dale clic a `Import from Git`.\n\nSelecciona GitHub.\n\n![](netlify2.png){fig-align=\"center\"}\n\nSe comenzar√° a sincronzar con tu perfil de GitHub y te mostrar√° todos los respositorio disponibles.\n\nElige el que acabamos de crear, donde est√° nuestro blog.\n\nSe mostrar√° algunos detalles. Ac√° debes ingresar en Base directory `_site`, como se muestra en la imagen.\n\nEste paso es importante, de lo contrario no funcionar√° tu web.\n\n![](netlify3.png){fig-align=\"center\"}\n\nDale al bot√≥n `Deploy site`.\n\nTe va a salir algo como esto...\n\n![](netlify4.png){fig-align=\"center\"}\n\nSi no cambia el estado y sigue saliendo el mensaje Site deply in progress, puedes actualizar la p√°gina de tu navegador. Habitualmente este proceso es r√°pido y solo toma unos segundos.\n\n![](netlify5.png){fig-align=\"center\"}\n\nSi todo anda bien, deber√≠a estar ya desplegado nuestro blog.\n\nPara acceder a √©l, anda al link que te ponen (xxxx.netlify.app).\n\nEsta es una direcci√≥n web con un nombre aleatorio que te da Netlify. La podemos cambiar en la configuraci√≥n por algo que nos haga m√°s sentido. E incluso, podemos usar nustro propio dominio si es que lo tenemos.\n\nSe abrir√° una pesta√±a en tu navegador, mostrando tu blog!!! üòç\n\n![](deploy_web.png){fig-align=\"center\"}\n\nEn Netlify, en la secci√≥n de Site settings podemos encontrar la opci√≥n para cambiar la direcci√≥n web.\n\nPara ello, debemos dar clic en `Change site name`.\n\n![](netlify6.png){fig-align=\"center\"}\n\nSe te abrir√° una ventana. Ingresa el nombre que desees y listo.\n\nCambiado el nombre. Nota que este cambio de nombre cambia la direcci√≥n web, por lo que si has compartido el link previo, este ya no funcionar√°. Ten cuidado con cambiar el nombre a cada rato.\n\n‚û°Ô∏è[As√≠ qued√≥ mi blog.](https://blogdepaulo.netlify.app/)\n\nEspero que este tutorial te haya servido y que puedas tener tu propio blog.\n\nEn pr√≥ximas entradas, estar√© revisando c√≥mo hacer ajustes al blog, personalizar algunas cosas est√©ticas y agregarle algunas funcionaidades.\n\nNos vemos! üòú\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}