---
title: "Creando mi primer blog con Quarto"
description: "Te ense√±o a crear tu primer blog con Quarto, publicar nuevos art√≠culos, subirlo a GitHub y desplegarlo en la web."
author: "Paulo Villarroel"
date: "2022-09-17"
categories: [quarto, tutorial]
image: "blog_quarto.jpg"
---

# Hola!!

Este es el primer post de mi nuevo blog. Ac√° ir√© escribiendo sobre distintas tem√°ticas relacionadas al mundo de la programaci√≥n y la ciencia de datos.

Bienvenido/a nuevamente.

En esta oportunidad te voy a ense√±ar a crear tu propio blog, como el que est√°s viendo ahora. Si! Como este mismo. Te parece?

Pues vamos a ello!!

Lo primero que debes saber es que este blog est√° constru√≠do sobre la base [Quarto](https://quarto.org/). Quarto es una nueva plataforma open-source, lanzada hace poco tiempo, y que busca facilitar la publicaci√≥n de art√≠culos cient√≠ficos. La gracia que tiene es que soporta distintos lenguajes de programaci√≥n (R, Python, Julia) en una sola aplicaci√≥n.

Bueno, dentro de las cosas que permite hacer Quarto es crear un blog. Que es lo que haremos ahora.

## Paso 1: Descargar Quarto

Lo primero que tienes que hacer es [descargar Quarto](https://quarto.org/docs/get-started/) desde su web oficial. Elige la versi√≥n que corresponda a tu sistema operativo. La instalaci√≥n no tiene ninguna cosa extra√±a, es como cualquier programa nada m√°s.

![](download-quarto.png){fig-align="center"}

En lo personal, estoy usando RStudio como editor de texto, pero se pueden usar otros como Visual Studio Code o Jupyter Notebooks. En este caso, explicar√© los pasos para RStudio.

## Paso 2: Crea un proyecto

Si est√°s familiarizado con RStudio, sabr√°s lo que es un proyecto. Si no, pues un proyecto es un conjunto de archivos que se mantienen relacionados entre s√≠, de modo que sea m√°s simple el desarrollo y vinculaci√≥n. Adem√°s, de facilitar el uso de rutas relativas lo cual es genial a la hora de compartir c√≥digo o de proyectos m√°s grandes.

En RStudio debes ir al men√∫ superior y seleccionar `New Project‚Ä¶`

![](new-project1.png){fig-align="center"}

Eso te abrir√° una nueva pesta√±a, en donde debes seleccionar la opci√≥n `New Directory.`

![](new-project2.png){fig-align="center"}

Luego, debes eligir el tipo de proyecto. En este caso, selecciona `Quarto Blog`.

![](new-project3.png){fig-align="center"}

Se abrir√° una nueva ventana. Ac√° debes poner el nombre de la carpera que vas a crear (en Directory name). Verifica la carpeta en donde vas a crear este directorio. Luego dale a `Create Project`.

![](new-project4.png){fig-align="center"}

Con eso, Quarto te crear√° una serie de archivos y la estructura del blog de forma autom√°tica!!!

Ver√°s que ahora tienes muchos archivos nuevos en tu visor.

![](files.png){fig-align="center"}

## Paso 3: Preview de tu blog

Con los pasos anteriores, Quarto te cre√≥ un blog completamente funcional. Eso si, con art√≠culos de muestra que despu√©s hay que eliminar o modificar, obviamente. Pero ya tienes la base.

Para revisar c√≥mo se ve tu blog, debes darle clic al bot√≥n `Render` de la parte superior.

![](render.png){fig-align="center"}

Ver√°s una serie de cosas que van a sair en la consola de RStudio, pero es parte del proceso de renderizado. O sea, para armar el blog y pasar los archivos a una p√°gina web.

Si todo sale bien, se deber√≠a abrir tu blog en una pesta√±a de tu navegador.

Y listo!!!

Ya tienes tu primer blog üéâ

Es posible que tu blog se muestra en el mismo RStudio en una ventana lateral. Esa opci√≥n me parece que viene por defecto (no recuerdo bien), pero yo la tengo configurada para que me aparezca el preview en una ventana del navegador. Me gusta m√°s esa opci√≥n, pues se ve mejor el contenido. Para poner esa opci√≥n, debes darle clic a la tuerca que est√° al lado derecho del bot√≥n Render y seleccionar `Preview in Window`.

![](preview.png)

F√≠jate que la web est√° en tu computador y se est√° mosrando desde una direcci√≥n que dice `localhost`. Esto es por ese mismo motivo. A pesar de que se ve como una web a trav√©s de tu navegador, el blog solo est√° en tu computador. No est√° subido a internet ni alojado en ning√∫n servicio que permita que otros lo vean. Para eso, hay que hacer algunas cosas, que las veremos un poco m√°s adelante.

## Paso 4: Crear un post

Cuando creas tu proyecto de blog con Quarto, la aplicaci√≥n crea la estructura y pone 2 post de ejemplo.

Si observas los archivos, ver√°s una carpeta llamada `posts`. En esta carpeta es donde se deben ir guardando los archivos para los nuevos posts.

Por defecto te crea 2 carpetas: welcome y post-with-code

Esos son post de muestra, que los puedes eliminar. Pero antes que lo hagas, quiero que te fijes en c√≥mo estan estructurados. Esa ser√° la forma en que deber√°s crear tu pr√≥ximas entradas.

Cada art√≠culo (o post) consiste en una carpeta. Dentro de ella hay un archivo `index.qmd` y algunas im√°genes.

Esta es la estructura de archivos que se te crear√° de forma autom√°tica:

-   Created \_quarto.yml

-   Created index.qmd}

-   Created posts/welcome/index.qmd

-   Created posts/post-with-code/index.qmd

-   Created about.qmd

-   Created styles.css

-   Created posts/\_metadata.yml

En la carpeta `posts` crea un nuevo archivo con el nombre de tu nueva entrada. Dentro de esa carpeta, crea un archivo `.qmd` y ll√°malo `index`. Es decir, te deber√≠a quedar un archivo de nombre i`ndex.qmd`

Esto es fundamental. Siempre usa index para nombrar a los nuevos posts. De lo contrario, Quarto no encontrar√° el archivo al cual hacer referencia para renderizar adecuadamente la web.

Si ya est√°s familiarizado/a con R Markdown, notar√°s que trabajar con Quarto es muy similar. De hecho, los archivos .qmd tienen la misma estructura. Un encabezado (YAML) con algunas cinfiguraciones generales y luego el espacio para escribir texto.

Para este post, us√© este YAML:

![](yaml.png){fig-align="center"}

En art√≠culos posteriores veremos c√≥mo configurar el YAML, pues tiene muchas opciones.

Ahora que ya tienes creada una nueva carpeta dentro de `posts` y agregaste el `index.qmd`, b√°sicamente ya tienes un nuevo art√≠culo listo para el blog.

Guarda todos los cambios y dale a `Render` nuevamente. Si ya ten√≠as abierto el blog en tu navegador, deber√≠an verse reflejados los cambios realizados. Si no pasa eso, actualiza la p√°gina para ver los cambios.

As√≠ se ve mi blog, solo con 1 art√≠culo publicado (que es este).

![](blog.png){fig-align="center"}

## Paso 5: Subiendo el blog a GitHub

Me encanta el open-source y el compartir c√≥digo. Y una de las mejores formas de dejarlo publicado en GitHub.

Para hacerlo, desde RStudio es bastante simple. Ah! Debes tener una cuenta ya creada en GitHub y tener GIT instalado.

Teniendo lo anterior ya realizado, podemos usar la librer√≠a `{usethis}` para simpleificar el proceso. [Ac√° puedes ver](https://usethis.r-lib.org/) la documentaci√≥n oficial.

Primero, instalamos la librer√≠a:

```{r}
# install.packages("usethis")
```

Configuramos nuestras credenciales (los datos que usamos para la cuenta de GitHub):

```{r}
# usethis::use_git_config(
#   # your name
#   user.name = "Mi nombre",
#   # your email used in your GitHub account
#   user.email = "micorreo@gmail.com"
# )
```

Creamos nuestro GitHub PAT Token con [`usethis::create_github_token()`](https://usethis.r-lib.org/reference/github-token.html) (es como una contrase√±a, pero m√°s segura). Cuando ejecutas este comando, se te abrir√° una pesta√±a de tu navegador. Tendr√°s que verificar algunos permisos a GitHub. Luego, en la configuraci√≥n del token, cambia el nombre, ajustael tiempo de expiraci√≥n y el resto d√©jalo como est√°. Crea el token.

Se te mostrar√° una nueva p√°gina con tu claves.

Para guardar tu nuevo token, usa [`gitcreds::gitcreds_set()`](https://usethis.r-lib.org/reference/github-token.html). En la consola se te mostrar√° un men√∫. Selecciona la opci√≥n 2 Replace these credentials. Luego copia el token de GitHub, actualiza y guarda tus credenciales.

Reinicia la sesi√≥n de RStudio para que se hagan efectivos los cambios. Usualmente puedes usar `CTRL + SHIFT + F10` o del men√∫ de arriba selecciona la pesta√±a de Session y luego Restart R.

Usa [`usethis::git_sitrep()`](https://usethis.r-lib.org/reference/git_sitrep.html) para verificar si tus credenciales como nombre, email y PAT est√°n correctamente configuradas.

F√≠jate que salga este texto `Personal access token for 'https://github.com': '<discovered>'`

Con eso ya deber√≠amos estar listos con la configuraci√≥n de GIT y GitHub.

Ahora configuremos algunas cosas m√°s...

Usaremos `use_git()` para iniciar el control de versiones de GIT en nuestro proyecto.

```{r}
# usethis::use_git()
# ‚úî Setting active project to '/Users/Desktop/name-of-your-blog/'
# ‚úî Initialising Git repo
# ‚úî Adding '.Rproj.user', '.Rhistory', '.Rdata', '.httr-oauth', '.DS_Store' to '.gitignore'
# There are 8 uncommitted files:
# * '_quarto.yml'
# * '.gitignore'
# * 'about.qmd'
# * 'example-quarto-blog.Rproj'
# * 'index.qmd'
# * 'posts/'
# * 'profile.jpg'
# * 'styles.css'


# Is it ok to commit them?
# 
# 1: Not now
# 2: Yup
# 3: Negative
# 
# Selection: 2


# ‚úî Adding files
# ‚úî Making a commit with message 'Initial commit'
# ‚Ä¢ A restart of RStudio is required to activate the Git pane
# Restart now?
# 
# 1: No way
# 2: Definitely
# 3: No
# 
# Selection: 2
```

Ahora, usaremos use_github() para crear un repositorio en GitHub y subir el proyecto.

```{r}
# usethis::use_github()
```

Si todo ha salido bien, se deber√≠a abrir tu navegador con el nuevo repositorio de GitHub.

[Ac√° puedes](https://github.com/paulovillarroel/mi_blog) ver el repositorio de este proyecto.

## Paso 6: Desplegar con Netlify

Ahora vamos a publicar nuestro blog en internet para que otros lo puedan ver. Recuerda que hasta ahora, sigue estando solo en tu computador.

Para hacer el deploy (despliegue) usaremos [Netlify](https://www.netlify.com/).

Este es un servicio que har√° que el blog est√© disponible en una direcci√≥n web. Adem√°s, entre otras funciones super interesantes, tiene la opci√≥n de conectarlo a un repositorio de GitHub, que es lo que haremos en este caso.

Usaremos esta opci√≥n, ya que nos ayudar√° a ser m√°s transparentes en todo el flujo de trabajo y podremos desplegar los cambios que vayamos realizando en nuestro proyecto y repo de GitHub.

Para eso, primero deber crearte una cuenta en Netlify. Mi recomendaci√≥n es que lo hagas usando tu cuenta de GitHub.

Una vez iniciada sesi√≥n, se te mostrar√° algo as√≠:

![](netlify1.png){fig-align="center"}

En la secci√≥n Sites, dale clic a `Import from Git`.

Selecciona GitHub.

![](netlify2.png){fig-align="center"}

Se comenzar√° a sincronzar con tu perfil de GitHub y te mostrar√° todos los respositorio disponibles.

Elige el que acabamos de crear, donde est√° nuestro blog.

Se mostrar√° algunos detalles. Ac√° debes ingresar en Base directory `_site`, como se muestra en la imagen.

Este paso es importante, de lo contrario no funcionar√° tu web.

![](netlify3.png){fig-align="center"}

Dale al bot√≥n `Deploy site`.

Te va a salir algo como esto...

![](netlify4.png){fig-align="center"}

Si no cambia el estado y sigue saliendo el mensaje Site deply in progress, puedes actualizar la p√°gina de tu navegador. Habitualmente este proceso es r√°pido y solo toma unos segundos.

![](netlify5.png){fig-align="center"}

Si todo anda bien, deber√≠a estar ya desplegado nuestro blog.

Para acceder a √©l, anda al link que te ponen (xxxx.netlify.app).

Esta es una direcci√≥n web con un nombre aleatorio que te da Netlify. La podemos cambiar en la configuraci√≥n por algo que nos haga m√°s sentido. E incluso, podemos usar nustro propio dominio si es que lo tenemos.

Se abrir√° una pesta√±a en tu navegador, mostrando tu blog!!! üòç

![](deploy_web.png){fig-align="center"}

En Netlify, en la secci√≥n de Site settings podemos encontrar la opci√≥n para cambiar la direcci√≥n web.

Para ello, debemos dar clic en `Change site name`.

![](netlify6.png){fig-align="center"}

Se te abrir√° una ventana. Ingresa el nombre que desees y listo.

Cambiado el nombre. Nota que este cambio de nombre cambia la direcci√≥n web, por lo que si has compartido el link previo, este ya no funcionar√°. Ten cuidado con cambiar el nombre a cada rato.

Espero que este tutorial te haya servido y que puedas tener tu propio blog.

En pr√≥ximas entradas, estar√© revisando c√≥mo hacer ajustes al blog, personalizar algunas cosas est√©ticas y agregarle algunas funcionaidades.

Nos vemos! üòú
